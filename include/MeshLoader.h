//-----------------------------------------------------------------------------
// File : MeshLoader.cpp
// Desc : Resource Mesh Module.
// Copyright(c) Pocol. All right reserved.
//-----------------------------------------------------------------------------
#pragma once

//-----------------------------------------------------------------------------
// Includes
//-----------------------------------------------------------------------------
#include <asdxResModel.h>

//-----------------------------------------------------------------------------
// Forward Declarations.
//-----------------------------------------------------------------------------
struct aiScene;
struct aiMesh;
struct aiMaterial;


///////////////////////////////////////////////////////////////////////////////
// TEXTURE_USAGE
///////////////////////////////////////////////////////////////////////////////
enum TEXTURE_USAGE
{
    TEXTURE_USAGE_NONE,
    TEXTURE_USAGE_DIFFUSE,
    TEXTURE_USAGE_SPECULAR,
    TEXTURE_USAGE_AMBIENT,
    TEXTURE_USAGE_EMISSIVE,
    TEXTURE_USAGE_HEIGHT,
    TEXTURE_USAGE_NORMAL,
    TEXTURE_USAGE_SHININESS,
    TEXTURE_USAGE_OPACITY,
    TEXTURE_USAGE_DISPLACEMENT,
    TEXTURE_USAGE_LIGHTMAP,
    TEXTURE_USAGE_REFLECTION,
};

///////////////////////////////////////////////////////////////////////////////
// TextureInfo structure
///////////////////////////////////////////////////////////////////////////////
struct TextureInfo
{
    TEXTURE_USAGE   Usage;      //!< 使用用途です.
    std::string     Path;       //!< ファイルパスです.
};

///////////////////////////////////////////////////////////////////////////////
// Material structure
///////////////////////////////////////////////////////////////////////////////
struct Material
{
    std::string                 Name;           //!< マテリアル名です.
    uint32_t                    Hash;           //!< マテリアル名ハッシュです.
    std::vector<TextureInfo>    Textures;       //!< テクスチャ情報です.
};


///////////////////////////////////////////////////////////////////////////////
// MeshLoader class
///////////////////////////////////////////////////////////////////////////////
class MeshLoader
{
    //=========================================================================
    // list of friend classes and methods.
    //=========================================================================
    /* NOTHING */

public:
    //=========================================================================
    // public variables.
    //=========================================================================
    /* NOTHING */

    //=========================================================================
    // public methods.
    //=========================================================================

    //-------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //-------------------------------------------------------------------------
    MeshLoader();

    //-------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //-------------------------------------------------------------------------
    ~MeshLoader();

    //-------------------------------------------------------------------------
    //! @brief      モデルをロードします.
    //!
    //! @param[in]      filename        ファイル名です.
    //! @param[out]     model           モデルの格納先です.
    //! @retval true    ロードに成功.
    //! @retval false   ロードに失敗.
    //-------------------------------------------------------------------------
    bool Load(const char* filename, asdx::ResModel& mode);

    //-------------------------------------------------------------------------
    //! @brief      マテリアルを取得します.
    //!
    //! @return     マテリアルを返却します.
    //-------------------------------------------------------------------------
    const std::vector<Material>& GetMaterials() const;

private:
    //=========================================================================
    // private variables.
    //=========================================================================
    const aiScene*          m_pScene    = nullptr;  //!< シーンデータ.
    std::vector<Material>   m_Materials;            //!< マテリアルデータです.

    //=========================================================================
    // private methods.
    //=========================================================================

    //-------------------------------------------------------------------------
    //! @brief      メッシュを解析します.
    //!
    //! @param[out]     model       モデルの格納先です.
    //! @param[in]      pSrcMesh    入力メッシュです.
    //-------------------------------------------------------------------------
    void ParseMesh(asdx::ResModel& model, const aiMesh* pSrcMesh);

    //-------------------------------------------------------------------------
    //! @brief      マテリアルを解析します.
    //!
    //! @param[in]      pSrcMaterial    入力マテリアルです.
    //-------------------------------------------------------------------------
    void ParseMaterial(const aiMaterial* pSrcMaterial);
};